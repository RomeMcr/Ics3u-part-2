{"version":3,"sources":["sorting.js"],"names":["arrayToSort","threshold","maximumSize","bruteForceValue","binarySearchValue","numElements","Math","floor","random","$","document","ready","loop","click","html","Date","bubbleSort","val","bruteForce","binarySearch","myId","append","length","i","num","push","changed","temp","matched","position","start","low","high","found","mid"],"mappings":"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","file":"sorting.js","sourcesContent":["\r\nvar arrayToSort = [];\r\nvar threshold = 100;\r\nvar maximumSize = 100;\r\nvar bruteForceValue;\r\nvar binarySearchValue;\r\n\r\n//the number of elements to place in the array\r\nvar numElements = Math.floor(Math.random() * threshold);\r\n\r\n\r\n//display the array when the document loads\r\n$(document).ready(function() {\r\n\r\n    loop(\"myList\");\r\n\r\n});\r\n\r\n//execute the bubble sort algorithm\r\n$(\"#bubbleSort\").click(function() {\r\n\r\n    //current time on start\r\n    $(\"#currentTime1\").html(new Date());\r\n\r\n\tbubbleSort();   \r\n   \r\n    $(\"#bubbleSortResult\").html(loop(\"bubbleSortResult\"));\r\n\r\n\r\n    //current time once complete\r\n    $(\"#endTime1\").html(new Date());\r\n\r\n});\r\n\r\n//execute the insertion sort algorithm\r\n$(\"#insertionSort\").click(function() {\r\n\r\n    //current time on start\r\n    $(\"#currentTime2\").html(new Date());\r\n\r\n    $(\"#insertionSortResult\").html(loop(\"insertionSortResult\"));\r\n    //write insertion sort here\r\n\r\n    //current time once complete\r\n    $(\"#endTime2\").html(new Date());\r\n\r\n});\r\n\r\n//execute the selection sort algorithm\r\n$(\"#selectionSort\").click(function() {\r\n\r\n    //current time on start\r\n    $(\"#currentTime3\").html(new Date());\r\n\r\n    $(\"#selectionSortResult\").html(loop(\"selectionSortResult\"));\r\n    \r\n    //write selection sort here\r\n\r\n    //current time once complete\r\n    $(\"#endTime3\").html(new Date());\r\n});  \r\n\r\n//do not need to be sorted\r\n$(\"#bruteForce\").click(function() {\r\n\r\n\tbruteForceValue = $(\"#bruteForceValue\").val();\r\n\r\n\t//to do write brute force alogothim\r\n\tbruteForce();\r\n});\r\n\r\n//this alogthim requires the lis r to be sroted in order\r\n$(\"#binarySearch\").click(function() {\r\n\r\n\t binarySearchValue = $(\"#binarySearchValue\").val();\r\n\r\n\t//to do write binary search alogothim\r\n\tbinarySearch();\r\n});\r\n\r\nfunction loop(myId) {\r\n    $(\"#\" + myId).append(\"[\");\r\n\r\n    if(arrayToSort.length == 0)\r\n    {\r\n        //populate the array with random numbers\r\n        for(var i = 0; i < numElements; i = i + 1)\r\n        {\r\n            var num = Math.floor(Math.random() * maximumSize);\r\n            arrayToSort.push(num);\r\n\r\n            if(i == numElements - 1)\r\n                $(\"#\" + myId).append(num);\r\n            else\r\n                $(\"#\" + myId).append(num + \", \");\r\n        }\r\n    }\r\n    else\r\n    {\r\n        for(var i = 0; i < numElements; i = i + 1)\r\n        {\r\n            if(i == numElements - 1)\r\n                $(\"#\" + myId).append(arrayToSort[i]);\r\n            else\r\n                $(\"#\" + myId).append(arrayToSort[i] + \", \");\r\n        }\r\n    }\r\n    $(\"#\" + myId).append(\"]\");\r\n    \r\n}\r\n\r\nfunction bubbleSort() \r\n{\r\n    \tdo \r\n    \t{\r\n    \t\tvar changed = false;//when change is ture do the \r\n    \t\t//for loop, and when change is false dont do this.\r\n    \t\tfor (var i = 0; i < arrayToSort.length -1; i ++){ \r\n    \t\t//myList[i] start with 0 then we `iterate through the array\r\n    \t\t// i did this \" myList.length - 1 \"because we will get an error on the last number and the last number have to be the biggest from the array\r\n\r\n    \t\t\tif (arrayToSort[i] > arrayToSort[i + 1] ){//if the frist index is greater than the second index\r\n    \t\t\t\tvar temp = arrayToSort[i];//then we make a variable named temp and\r\n    \t\t\t\tarrayToSort[i] = arrayToSort[i + 1];//then we going to overwrite the frist number and the secong number\r\n    \t\t\t\tarrayToSort[i + 1] = temp;//then with the one next to the number we re gonna put the value in the the one before it\r\n    \t\t\t\tchanged = true;//then we set the change to true\r\n    \t\t\t}\r\n    \t\t}\r\n    \t} while(changed);\r\n\r\n}\r\n\r\n\r\nfunction bruteForce() {\r\n\tvar matched = false;//we set the matched to falus\r\n\tvar position;\r\n\r\n\tfor (var start = 0; start < arrayToSort.length; start++)// this line will break when start is bigger than or equal than the last number \r\n\t{\r\n        if (arrayToSort[start] == bruteForceValue ) \r\n        {\r\n            matched = true;\r\n        }\r\n\t}\r\n\tif (matched == true) \r\n\t{\r\n\t\t$(\"#bruteForceResult\").html(\"The result is \" + matched + \" in position \" + position);// this just print out the result\r\n\r\n\t} else {\r\n\t\t$(\"#bruteForceResult\").html(\"The result is \" + matched);// this just print out the result\r\n\t}\r\n}\r\n\r\n\r\nfunction binarySearch () {\r\n  // initial values for start, middle and end\r\n  var low = 0;//the low means where u start\r\n  var high = arrayToSort.length - 1;//the high means where u finish\r\n  var found = false;//we set the found to false\r\n  var position;//this tells u where the number is\r\n  \r\n  while (low <= high) // While the middle low is greater than or equal to the high do this:\r\n  {\r\n  \tvar mid = Math.floor((high + low)/2);// sets a variable name mid and calutate the mid point of the array \r\n  \t//then we look at the mid point inside of the array\r\n    if (binarySearchValue == arrayToSort[mid]) //if the number we put in equels to the number in the mid point\r\n    {\r\n      \tfound = true;//if is that case then say we find the number\r\n      \tposition = mid;\r\n        break;//it stops once a value is found\r\n    }\r\n    if (binarySearchValue < arrayToSort[mid] ) //if the number we put in is smaller then the mid point number \r\n    {\r\n    \thigh = mid-1; //if it is that case then the highest number is going to be the mid point number and we minue one because the number we put in is not the mid point number\r\n    }\r\n    else // if the number we put in is bigger than mid point number \r\n    {\r\n    \tlow = mid+ 1; // then we r going to make the low equal to the mid point and puls one because the number we put in is not the mid point number\r\n    }\r\n\r\n  }\r\n  \tif (found == true) \r\n\t{\r\n\t\t$(\"#binarySearchResult\").html(\"The result is \" + found + \" in position \" + position);// this just print out the result\r\n\r\n\t} else {\r\n\t\t$(\"#binarySearchResult\").html(\"The result is \" + found);// this just print out the result\r\n\t}\r\n\r\n}\r\n\t\r\n\r\n \r\n"]}